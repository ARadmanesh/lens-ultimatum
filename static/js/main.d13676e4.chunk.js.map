{"version":3,"sources":["utils/theme.js","App.js","index.js"],"names":["darkTheme","createMuiTheme","palette","type","primary","main","secondary","typography","fontFamily","join","rtlDarkTheme","direction","ltrTheme","responsiveFontSizes","theme","useStyles","makeStyles","root","flexGrow","paper","padding","spacing","large","width","height","height100","grey","color","getContrastText","backgroundColor","blueG","blueGrey","ItemTypes","App","isTouchScreen","window","navigator","maxTouchPoints","msMaxTouchPoints","isTouch","console","log","useState","name","amount","accepts","boxes","setBoxes","handleDrop","useCallback","item","fromBox","boxName","destBox","map","ThemeProvider","CssBaseline","LinearProgress","variant","Container","maxWidth","className","Grid","container","justifyContent","alignItems","Paper","Typography","dndBackend","TouchBackend","HTML5Backend","DndProvider","backend","options","enableMouseEvents","index","accept","onDrop","renderBoxes","Button","size","onClick","RepositoryBox","memo","classes","useDrop","drop","collect","monitor","isOver","canDrop","tokensList","i","push","toString","xs","ref","style","lineHeight","elevation","Avatar","small","OpponentInfoBar","alt","src","component","MonetizedToken","useDrag","isDragging","drag","preview","DragPreviewImage","connect","role","cursor","opacity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13676e4.chunk.js","sourcesContent":["import {createMuiTheme, responsiveFontSizes} from '@material-ui/core';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#039be5'\n    },\n    secondary: {\n      main: '#f06292'\n    }\n  },\n  typography: {\n    fontFamily: [\n      'Vazir',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(',')\n  }\n});\n\nconst rtlDarkTheme = createMuiTheme({\n  direction: 'rtl',\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#039be5'\n    },\n    secondary: {\n      main: '#f06292'\n    }\n  },\n  typography: {\n    fontFamily: [\n      'Vazir',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(',')\n  }\n})\n\nexport const ltrTheme = responsiveFontSizes(darkTheme);\nexport const rtlTheme = responsiveFontSizes(rtlDarkTheme);\n","import React, {useState, useEffect, Fragment, useCallback, memo} from \"react\";\n//import ReactDOM from \"react-dom\";\nimport {\n  Typography,\n  Container,\n  ThemeProvider,\n  CssBaseline,\n  LinearProgress,\n  Grid,\n  Paper,\n  Button,\n  Avatar,\n  Badge\n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey, blueGrey, teal } from '@material-ui/core/colors';\nimport { sizing } from '@material-ui/system';\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { ltrTheme } from \"./utils/theme\";\nimport { DndProvider, useDrag , useDrop, DragPreviewImage } from 'react-dnd';\nimport { TouchBackend } from 'react-dnd-touch-backend';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n//css\nimport \"./app.css\";\n\nconst theme = ltrTheme;\nconst useDemoPart = false;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    //textAlign: 'center'\n  },\n  large: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  height100: {\n    height: '100%',\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[500]),\n    backgroundColor: grey[500],\n  },\n  blueG: {\n    color: theme.palette.getContrastText(blueGrey[500]),\n    backgroundColor: blueGrey[500],\n  }\n}));\n\n\n// Item types of draggable components which now are only one type\nconst ItemTypes = {\n  OPPONENT: 'opponent',\n  POT: 'pot',\n  PLAYER: 'player',\n}\n\nexport default function App() {\n  const isTouchScreen = () => {\n    return ( 'ontouchstart' in window ) ||\n           ( navigator.maxTouchPoints > 0 ) ||\n           ( navigator.msMaxTouchPoints > 0 );\n  }\n\n  const classes = useStyles();\n  const tokens = 10;\n  const isTouch = isTouchScreen();\n  console.log(isTouch);\n  const [boxes, setBoxes] = useState(\n    [\n      {name: ItemTypes.OPPONENT , amount : 0, accepts: [ItemTypes.POT, ItemTypes.PLAYER]},\n      {name: ItemTypes.POT , amount : tokens, accepts: [ItemTypes.PLAYER, ItemTypes.OPPONENT]},\n      {name: ItemTypes.PLAYER , amount : 0, accepts: [ItemTypes.POT, ItemTypes.OPPONENT]},\n    ]\n  );\n\n  /***\n   * token has been moved by player to a different box\n   */\n  const handleDrop = useCallback(\n    (name, item) => {\n      // item is the entity that is dropped and has {name, boxName}\n      // name is the name of the repositoryBox that entity has been dropped into\n      const fromBox = item.boxName;\n      const destBox = name;\n      //console.log('dropped on: ',destBox);\n      //console.log('from : ',fromBox);\n      setBoxes(boxes.map(item => {\n        if(item.name === fromBox){\n          return {...item, amount: item.amount-1};\n        }else if(item.name === destBox){\n          return {...item, amount: item.amount+1};\n        }else{\n          return item;\n        }\n      }));\n    },\n    [boxes],\n  )\n\n  const renderBoxes = () => {\n    var dndBackend = isTouchScreen() ? TouchBackend : HTML5Backend;\n    console.log(dndBackend);\n    return (\n      <Grid item container spacing={3}  alignItems='stretch' justifyContent='space-between' className='boxes-container'>\n        <DndProvider backend={dndBackend} options={isTouchScreen()?{enableMouseEvents: true}:{}}>\n          {boxes.map(({name, amount, accepts}, index) => (\n            <RepositoryBox\n              accept={accepts}\n              name={name}\n              amount={amount}\n              onDrop={(item) => handleDrop(name, item)}\n              key={index}\n            />\n          ))}\n        </DndProvider>\n      </Grid>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <CssBaseline />\n\n        <LinearProgress variant=\"determinate\" />\n\n        <Container maxWidth=\"sm\" className=\"study-container\">\n          <Grid container spacing={2} direction=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\">\n            <Grid item>\n              <Paper className=\"view-container\">\n                {/* Here the study view starts */}\n                <Fragment>\n                  <Grid container direction='column' spacing={2} alignItems='stretch' justifyContent='flex-start' className='ultimatum-container'>\n                    <Grid item>\n                      <Typography variant=\"body2\">opus irum doctorn ista manis ores fiendorus asten vaskaris</Typography>\n                    </Grid>\n                    {!useDemoPart && renderBoxes() }\n\n                    <Grid item container direction='row' justifyContent=\"space-around\" alignItems='center'>\n                      <Grid item><Grid container direction='column' justifyContent=\"space-around\" alignItems='center'>\n                        <Typography color='textSecondary' variant='caption'>Trial 1 of 3</Typography>\n                      </Grid></Grid>\n\n                      <Grid item><Grid container direction='column' justifyContent=\"space-around\" alignItems='center'>\n                        <Button size='large' color='primary' variant='outlined' onClick={()=> {console.log('finish')}}>Collect</Button>\n                      </Grid></Grid>\n\n                      <Grid item><Grid container direction='column' justifyContent=\"space-around\" alignItems='center'>\n                        <Typography variant=\"body1\">Total: 12</Typography>\n                      </Grid></Grid>\n                    </Grid>\n                  </Grid>\n                </Fragment>\n                {/* study view ends */}\n\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\n/***\n * Container box for monetized entities and their interactions\n */\nconst RepositoryBox = memo(function RepositoryBox({\n  name,\n  amount,\n  onDrop,\n  accept,\n})\n{\n  const classes = useStyles(theme);\n  const style = {\n    lineHeight: 'normal',\n    height: '128px',\n  }\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      //connectDropTarget: connect.dropTarget()\n    }),\n  })\n\n  const isActive = canDrop && isOver\n  let backgroundColor = '#222'\n  if (isActive) {\n    backgroundColor = 'darkgreen'\n  } else if (canDrop) {\n    backgroundColor = blueGrey[800]\n  }\n\n  const tokensList = [];\n  for(let i=0; i < amount; i++) {\n    tokensList.push(<MonetizedToken type={name} name={name+i.toString()} key={name+i.toString()} boxName={name} />);\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Paper ref={drop} className={classes.paper} style={{ ...style, backgroundColor }} elevation={3} >\n        <Grid container alignItems=\"center\" justifyContent=\"center\" direction=\"row\" className={classes.height100}>\n          <Grid item xs={4}>\n            {name === ItemTypes.OPPONENT &&\n              <OpponentInfoBar />\n            }\n            {name !== ItemTypes.OPPONENT &&\n              <Typography>{name}</Typography>\n            }\n          </Grid>\n          <Grid item xs={7}>\n            <Grid container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\n              {tokensList}\n            </Grid>\n          </Grid>\n          <Grid item xs={1}>\n              {/* <Typography variant=\"caption\" color=\"textSecondary\">Total <br /></Typography> */}\n              <Avatar className={[classes.small,classes.grey].join(' ')}>{amount}</Avatar>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n})\n\nconst OpponentInfoBar = memo(function OpponentInfoBar(){\n  const classes = useStyles();\n  return (\n    <>\n      <Avatar alt=\"Marry Stone\" src=\"/images/avatars/marry-avatar.jpg\" className={classes.large} />\n      <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\"> Marry Stone</Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">27 years old</Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Nurse</Typography>\n    </>\n  );\n})\n/***\n * Component which renders coin tokens and handles dragging events\n */\nconst MonetizedToken = memo(function MonetizedToken({type, name, boxName}) {\n  const classes = useStyles(theme);\n  const style = {\n    cursor: 'move',\n    backgroundColor: 'rbga(0,0,0,0)'\n  }\n\n  const [{ isDragging }, drag, preview] = useDrag(\n    () => ({\n      type,\n      item: { name, boxName },\n      collect: (monitor) => ({\n        isDragging: !!monitor.isDragging(),\n      }),\n    }),\n    [name],\n  )\n  return (\n    <Grid item>\n      <DragPreviewImage connect={preview} src={process.env.PUBLIC_URL + \"/images/token.png\"} />\n      <span ref={drag} role=\"Handle\" className='token-span' style={{ ...style, opacity: isDragging ? 0.5 : 1,}}> <MonetizationOnIcon /> </span>\n    </Grid>\n  );\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n//css\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}